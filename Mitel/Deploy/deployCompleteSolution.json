{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "customerPrefix": {
      "type": "string",
      "minLength": 3,
      "maxLength": 3,
      "metadata": {
        "description": "The 3 character Azure prefix for the customer for all resources"
      }
    },
    "customerInternetIp": {
      "type": "string",
      "metadata": {
        "description": "The customers overload IP address to whitelist for access"
      }
    },
    "location": {
      "type": "string",
      "metadata": {
        "description": "The location for all existing and new resources"
      },
      "defaultValue": "uksouth",
      "allowedValues": [
        "australiacentral",
        "australiacentral2",
        "australiaeast",
        "australiasoutheast",
        "brazilsouth",
        "brazilsoutheast",
        "canadacentral",
        "canadaeast",
        "centralindia",
        "centralus",
        "centraluseuap",
        "eastasia",
        "eastus",
        "eastus2",
        "eastus2euap",
        "francecentral",
        "francesouth",
        "germanynorth",
        "germanywestcentral",
        "japaneast",
        "japanwest",
        "koreacentral",
        "koreasouth",
        "northcentralus",
        "northeurope",
        "norwayeast",
        "norwaywest",
        "southafricanorth",
        "southafricawest",
        "southcentralus",
        "southeastasia",
        "southindia",
        "swedencentral",
        "switzerlandnorth",
        "switzerlandwest",
        "uaecentral",
        "uaenorth",
        "uksouth",
        "ukwest",
        "westcentralus",
        "westeurope",
        "westindia",
        "westus",
        "westus2",
        "westus3"
      ]
    },
    "useExistingVnet": {
      "type": "bool",
      "defaultValue": false,
      "allowedValues": [
        true,
        false
      ],
      "metadata": {
        "description": "Set to 'true' to use existing Virtual Network"
      }
    },
    "useExistingVnetResourceGroup": {
      "type": "bool",
      "defaultValue": false,
      "allowedValues": [
        true,
        false
      ],
      "metadata": {
        "description": "Set to 'true' to use existing Virtual Network resource group"
      }
    },
    "existingVirtualNetworkResourceGroup": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "If 'useExistingVnetResourceGroup' is true specify the name of the resource group to deploy the virtual network into"
      }
    },
    "vnetAddressSpace": {
      "type": "string",
      "defaultValue": "10.200.0.0/16",
      "metadata": {
        "description": "If 'existingVnet' is false specify the address space to use for the virtual network"
      }
    },
    "intAddressSubnet": {
      "type": "string",
      "defaultValue": "10.200.0.0/24",
      "metadata": {
        "description": "If 'existingVnet' is false specify the address space to use for the application/internal server subnet"
      }
    },
    "dmzAddressSubnet": {
      "type": "string",
      "defaultValue": "10.200.200.0/24",
      "metadata": {
        "description": "If 'existingVnet' is false specify the address space to use for the DMZ server subnet"
      }
    },
    "existingVirtualNetworkName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "If 'existingVnet' is true specify the name of the virtual network"
      }
    },
    "existingIntSubnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "If 'existingVnet' is true specify the name of the existing internal subnet"
      }
    },
    "existingDMZSubnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "If 'existingVnet' is true specify the name of the existing DMZ subnet"
      }
    },
    "useExistingNSG": {
      "type": "bool",
      "defaultValue": false,
      "allowedValues": [
        true,
        false
      ],
      "metadata": {
        "description": "Set to 'true' to use existing Network Security Groups"
      }
    },
    "existingIntNSGName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "If 'existingNSG' is true specify the name of the existing internal network security group"
      }
    },
    "existingDmzNSGName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "If 'existingNSG' is true specify the name of the existing DMZ network security group"
      }
    },
    "useExistingPrivateDNSZone": {
      "type": "bool",
      "defaultValue": false,
      "allowedValues": [
        true,
        false
      ],
      "metadata": {
        "description": "Set to 'true' to use an existing Private DNS Zone"
      }
    },
    "privateDNSZoneName": {
      "type": "string",
      "metadata": {
        "description": "The name of the Private DNS Zone that either already exists or is to be created"
      }
    },
    "useExistingStorageAccount": {
      "type": "bool",
      "defaultValue": false,
      "allowedValues": [
        true,
        false
      ],
      "metadata": {
        "description": "Set to 'true' to use an existing storage account"
      }
    },
    "existingStorageAccountName": {
      "type": "string",
      "metadata": {
        "description": "If 'useExistingStorageAccount' is true specify the name of the storage account"
      }
    },
    "MSLTimezone": {
      "type": "string",
      "defaultValue": "Europe/London",
      "allowedValues": [
        "Africa/Abidjan",
        "Africa/Accra",
        "Africa/Addis_Ababa",
        "Africa/Algiers",
        "Africa/Asmara",
        "Africa/Asmera",
        "Africa/Bamako",
        "Africa/Bangui",
        "Africa/Banjul",
        "Africa/Bissau",
        "Africa/Blantyre",
        "Africa/Brazzaville",
        "Africa/Bujumbura",
        "Africa/Cairo",
        "Africa/Casablanca",
        "Africa/Ceuta",
        "Africa/Conakry",
        "Africa/Dakar",
        "Africa/Dar_es_Salaam",
        "Africa/Djibouti",
        "Africa/Douala",
        "Africa/El_Aaiun",
        "Africa/Freetown",
        "Africa/Gaborone",
        "Africa/Harare",
        "Africa/Johannesburg",
        "Africa/Juba",
        "Africa/Kampala",
        "Africa/Khartoum",
        "Africa/Kigali",
        "Africa/Kinshasa",
        "Africa/Lagos",
        "Africa/Libreville",
        "Africa/Lome",
        "Africa/Luanda",
        "Africa/Lubumbashi",
        "Africa/Lusaka",
        "Africa/Malabo",
        "Africa/Maputo",
        "Africa/Maseru",
        "Africa/Mbabane",
        "Africa/Mogadishu",
        "Africa/Monrovia",
        "Africa/Nairobi",
        "Africa/Ndjamena",
        "Africa/Niamey",
        "Africa/Nouakchott",
        "Africa/Ouagadougou",
        "Africa/Porto-Novo",
        "Africa/Sao_Tome",
        "Africa/Timbuktu",
        "Africa/Tripoli",
        "Africa/Tunis",
        "Africa/Windhoek",
        "America/Adak",
        "America/Anchorage",
        "America/Anguilla",
        "America/Antigua",
        "America/Araguaina",
        "America/Argentina/Buenos_Aires",
        "America/Argentina/Catamarca",
        "America/Argentina/ComodRivadavia",
        "America/Argentina/Cordoba",
        "America/Argentina/Jujuy",
        "America/Argentina/La_Rioja",
        "America/Argentina/Mendoza",
        "America/Argentina/Rio_Gallegos",
        "America/Argentina/Salta",
        "America/Argentina/San_Juan",
        "America/Argentina/San_Luis",
        "America/Argentina/Tucuman",
        "America/Argentina/Ushuaia",
        "America/Aruba",
        "America/Asuncion",
        "America/Atikokan",
        "America/Atka",
        "America/Bahia",
        "America/Bahia_Banderas",
        "America/Barbados",
        "America/Belem",
        "America/Belize",
        "America/Blanc-Sablon",
        "America/Boa_Vista",
        "America/Bogota",
        "America/Boise",
        "America/Buenos_Aires",
        "America/Cambridge_Bay",
        "America/Campo_Grande",
        "America/Cancun",
        "America/Caracas",
        "America/Catamarca",
        "America/Cayenne",
        "America/Cayman",
        "America/Chicago",
        "America/Chihuahua",
        "America/Coral_Harbour",
        "America/Cordoba",
        "America/Costa_Rica",
        "America/Creston",
        "America/Cuiaba",
        "America/Curacao",
        "America/Danmarkshavn",
        "America/Dawson",
        "America/Dawson_Creek",
        "America/Denver",
        "America/Detroit",
        "America/Dominica",
        "America/Edmonton",
        "America/Eirunepe",
        "America/El_Salvador",
        "America/Ensenada",
        "America/Fort_Nelson",
        "America/Fort_Wayne",
        "America/Fortaleza",
        "America/Glace_Bay",
        "America/Godthab",
        "America/Goose_Bay",
        "America/Grand_Turk",
        "America/Grenada",
        "America/Guadeloupe",
        "America/Guatemala",
        "America/Guayaquil",
        "America/Guyana",
        "America/Halifax",
        "America/Havana",
        "America/Hermosillo",
        "America/Indiana/Indianapolis",
        "America/Indiana/Knox",
        "America/Indiana/Marengo",
        "America/Indiana/Petersburg",
        "America/Indiana/Tell_City",
        "America/Indiana/Vevay",
        "America/Indiana/Vincennes",
        "America/Indiana/Winamac",
        "America/Indianapolis",
        "America/Inuvik",
        "America/Iqaluit",
        "America/Jamaica",
        "America/Jujuy",
        "America/Juneau",
        "America/Kentucky/Louisville",
        "America/Kentucky/Monticello",
        "America/Knox_IN",
        "America/Kralendijk",
        "America/La_Paz",
        "America/Lima",
        "America/Los_Angeles",
        "America/Louisville",
        "America/Lower_Princes",
        "America/Maceio",
        "America/Managua",
        "America/Manaus",
        "America/Marigot",
        "America/Martinique",
        "America/Matamoros",
        "America/Mazatlan",
        "America/Mendoza",
        "America/Menominee",
        "America/Merida",
        "America/Metlakatla",
        "America/Mexico_City",
        "America/Miquelon",
        "America/Moncton",
        "America/Monterrey",
        "America/Montevideo",
        "America/Montreal",
        "America/Montserrat",
        "America/Nassau",
        "America/New_York",
        "America/Nipigon",
        "America/Nome",
        "America/Noronha",
        "America/North_Dakota/Beulah",
        "America/North_Dakota/Center",
        "America/North_Dakota/New_Salem",
        "America/Ojinaga",
        "America/Panama",
        "America/Pangnirtung",
        "America/Paramaribo",
        "America/Phoenix",
        "America/Port-au-Prince",
        "America/Port_of_Spain",
        "America/Porto_Acre",
        "America/Porto_Velho",
        "America/Puerto_Rico",
        "America/Punta_Arenas",
        "America/Rainy_River",
        "America/Rankin_Inlet",
        "America/Recife",
        "America/Regina",
        "America/Resolute",
        "America/Rio_Branco",
        "America/Rosario",
        "America/Santa_Isabel",
        "America/Santarem",
        "America/Santiago",
        "America/Santo_Domingo",
        "America/Sao_Paulo",
        "America/Scoresbysund",
        "America/Shiprock",
        "America/Sitka",
        "America/St_Barthelemy",
        "America/St_Johns",
        "America/St_Kitts",
        "America/St_Lucia",
        "America/St_Thomas",
        "America/St_Vincent",
        "America/Swift_Current",
        "America/Tegucigalpa",
        "America/Thule",
        "America/Thunder_Bay",
        "America/Tijuana",
        "America/Toronto",
        "America/Tortola",
        "America/Vancouver",
        "America/Virgin",
        "America/Whitehorse",
        "America/Winnipeg",
        "America/Yakutat",
        "America/Yellowknife",
        "Antarctica/Casey",
        "Antarctica/Davis",
        "Antarctica/DumontDUrville",
        "Antarctica/Macquarie",
        "Antarctica/Mawson",
        "Antarctica/McMurdo",
        "Antarctica/Palmer",
        "Antarctica/Rothera",
        "Antarctica/South_Pole",
        "Antarctica/Syowa",
        "Antarctica/Troll",
        "Antarctica/Vostok",
        "Arctic/Longyearbyen",
        "Asia/Aden",
        "Asia/Almaty",
        "Asia/Amman",
        "Asia/Anadyr",
        "Asia/Aqtau",
        "Asia/Aqtobe",
        "Asia/Ashgabat",
        "Asia/Ashkhabad",
        "Asia/Atyrau",
        "Asia/Baghdad",
        "Asia/Bahrain",
        "Asia/Baku",
        "Asia/Bangkok",
        "Asia/Barnaul",
        "Asia/Beirut",
        "Asia/Bishkek",
        "Asia/Brunei",
        "Asia/Calcutta",
        "Asia/Chita",
        "Asia/Choibalsan",
        "Asia/Chongqing",
        "Asia/Chungking",
        "Asia/Colombo",
        "Asia/Dacca",
        "Asia/Damascus",
        "Asia/Dhaka",
        "Asia/Dili",
        "Asia/Dubai",
        "Asia/Dushanbe",
        "Asia/Famagusta",
        "Asia/Gaza",
        "Asia/Harbin",
        "Asia/Hebron",
        "Asia/Ho_Chi_Minh",
        "Asia/Hong_Kong",
        "Asia/Hovd",
        "Asia/Irkutsk",
        "Asia/Istanbul",
        "Asia/Jakarta",
        "Asia/Jayapura",
        "Asia/Jerusalem",
        "Asia/Kabul",
        "Asia/Kamchatka",
        "Asia/Karachi",
        "Asia/Kashgar",
        "Asia/Kathmandu",
        "Asia/Katmandu",
        "Asia/Khandyga",
        "Asia/Kolkata",
        "Asia/Krasnoyarsk",
        "Asia/Kuala_Lumpur",
        "Asia/Kuching",
        "Asia/Kuwait",
        "Asia/Macao",
        "Asia/Macau",
        "Asia/Magadan",
        "Asia/Makassar",
        "Asia/Manila",
        "Asia/Muscat",
        "Asia/Nicosia",
        "Asia/Novokuznetsk",
        "Asia/Novosibirsk",
        "Asia/Omsk",
        "Asia/Oral",
        "Asia/Phnom_Penh",
        "Asia/Pontianak",
        "Asia/Pyongyang",
        "Asia/Qatar",
        "Asia/Qostanay",
        "Asia/Qyzylorda",
        "Asia/Rangoon",
        "Asia/Riyadh",
        "Asia/Saigon",
        "Asia/Sakhalin",
        "Asia/Samarkand",
        "Asia/Seoul",
        "Asia/Shanghai",
        "Asia/Singapore",
        "Asia/Srednekolymsk",
        "Asia/Taipei",
        "Asia/Tashkent",
        "Asia/Tbilisi",
        "Asia/Tehran",
        "Asia/Tel_Aviv",
        "Asia/Thimbu",
        "Asia/Thimphu",
        "Asia/Tokyo",
        "Asia/Tomsk",
        "Asia/Ujung_Pandang",
        "Asia/Ulaanbaatar",
        "Asia/Ulan_Bator",
        "Asia/Urumqi",
        "Asia/Ust-Nera",
        "Asia/Vientiane",
        "Asia/Vladivostok",
        "Asia/Yakutsk",
        "Asia/Yangon",
        "Asia/Yekaterinburg",
        "Asia/Yerevan",
        "Atlantic/Azores",
        "Atlantic/Bermuda",
        "Atlantic/Canary",
        "Atlantic/Cape_Verde",
        "Atlantic/Faeroe",
        "Atlantic/Faroe",
        "Atlantic/Jan_Mayen",
        "Atlantic/Madeira",
        "Atlantic/Reykjavik",
        "Atlantic/South_Georgia",
        "Atlantic/St_Helena",
        "Atlantic/Stanley",
        "Australia/ACT",
        "Australia/Adelaide",
        "Australia/Brisbane",
        "Australia/Broken_Hill",
        "Australia/Canberra",
        "Australia/Currie",
        "Australia/Darwin",
        "Australia/Eucla",
        "Australia/Hobart",
        "Australia/LHI",
        "Australia/Lindeman",
        "Australia/Lord_Howe",
        "Australia/Melbourne",
        "Australia/NSW",
        "Australia/North",
        "Australia/Perth",
        "Australia/Queensland",
        "Australia/South",
        "Australia/Sydney",
        "Australia/Tasmania",
        "Australia/Victoria",
        "Australia/West",
        "Australia/Yancowinna",
        "Brazil/Acre",
        "Brazil/DeNoronha",
        "Brazil/East",
        "Brazil/West",
        "CET",
        "CST6CDT",
        "Canada/Atlantic",
        "Canada/Central",
        "Canada/Eastern",
        "Canada/Mountain",
        "Canada/Newfoundland",
        "Canada/Pacific",
        "Canada/Saskatchewan",
        "Canada/Yukon",
        "Chile/Continental",
        "Chile/EasterIsland",
        "Cuba",
        "EET",
        "EST",
        "EST5EDT",
        "Egypt",
        "Eire",
        "Europe/Amsterdam",
        "Europe/Andorra",
        "Europe/Astrakhan",
        "Europe/Athens",
        "Europe/Belfast",
        "Europe/Belgrade",
        "Europe/Berlin",
        "Europe/Bratislava",
        "Europe/Brussels",
        "Europe/Bucharest",
        "Europe/Budapest",
        "Europe/Busingen",
        "Europe/Chisinau",
        "Europe/Copenhagen",
        "Europe/Dublin",
        "Europe/Gibraltar",
        "Europe/Guernsey",
        "Europe/Helsinki",
        "Europe/Isle_of_Man",
        "Europe/Istanbul",
        "Europe/Jersey",
        "Europe/Kaliningrad",
        "Europe/Kiev",
        "Europe/Kirov",
        "Europe/Lisbon",
        "Europe/Ljubljana",
        "Europe/London",
        "Europe/Luxembourg",
        "Europe/Madrid",
        "Europe/Malta",
        "Europe/Mariehamn",
        "Europe/Minsk",
        "Europe/Monaco",
        "Europe/Moscow",
        "Europe/Nicosia",
        "Europe/Oslo",
        "Europe/Paris",
        "Europe/Podgorica",
        "Europe/Prague",
        "Europe/Riga",
        "Europe/Rome",
        "Europe/Samara",
        "Europe/San_Marino",
        "Europe/Sarajevo",
        "Europe/Saratov",
        "Europe/Simferopol",
        "Europe/Skopje",
        "Europe/Sofia",
        "Europe/Stockholm",
        "Europe/Tallinn",
        "Europe/Tirane",
        "Europe/Tiraspol",
        "Europe/Ulyanovsk",
        "Europe/Uzhgorod",
        "Europe/Vaduz",
        "Europe/Vatican",
        "Europe/Vienna",
        "Europe/Vilnius",
        "Europe/Volgograd",
        "Europe/Warsaw",
        "Europe/Zagreb",
        "Europe/Zaporozhye",
        "Europe/Zurich",
        "GB",
        "GB-Eire",
        "GMT",
        "GMT+0",
        "GMT-0",
        "GMT0",
        "Greenwich",
        "HST",
        "Hongkong",
        "Iceland",
        "Indian/Antananarivo",
        "Indian/Chagos",
        "Indian/Christmas",
        "Indian/Cocos",
        "Indian/Comoro",
        "Indian/Kerguelen",
        "Indian/Mahe",
        "Indian/Maldives",
        "Indian/Mauritius",
        "Indian/Mayotte",
        "Indian/Reunion",
        "Iran",
        "Israel",
        "Jamaica",
        "Japan",
        "Kwajalein",
        "Libya",
        "MET",
        "MST",
        "MST7MDT",
        "Mexico/BajaNorte",
        "Mexico/BajaSur",
        "Mexico/General",
        "NZ",
        "NZ-CHAT",
        "Navajo",
        "PRC",
        "PST8PDT",
        "Pacific/Apia",
        "Pacific/Auckland",
        "Pacific/Bougainville",
        "Pacific/Chatham",
        "Pacific/Chuuk",
        "Pacific/Easter",
        "Pacific/Efate",
        "Pacific/Enderbury",
        "Pacific/Fakaofo",
        "Pacific/Fiji",
        "Pacific/Funafuti",
        "Pacific/Galapagos",
        "Pacific/Gambier",
        "Pacific/Guadalcanal",
        "Pacific/Guam",
        "Pacific/Honolulu",
        "Pacific/Johnston",
        "Pacific/Kiritimati",
        "Pacific/Kosrae",
        "Pacific/Kwajalein",
        "Pacific/Majuro",
        "Pacific/Marquesas",
        "Pacific/Midway",
        "Pacific/Nauru",
        "Pacific/Niue",
        "Pacific/Norfolk",
        "Pacific/Noumea",
        "Pacific/Pago_Pago",
        "Pacific/Palau",
        "Pacific/Pitcairn",
        "Pacific/Pohnpei",
        "Pacific/Ponape",
        "Pacific/Port_Moresby",
        "Pacific/Rarotonga",
        "Pacific/Saipan",
        "Pacific/Samoa",
        "Pacific/Tahiti",
        "Pacific/Tarawa",
        "Pacific/Tongatapu",
        "Pacific/Truk",
        "Pacific/Wake",
        "Pacific/Wallis",
        "Pacific/Yap",
        "Poland",
        "Portugal",
        "ROC",
        "ROK",
        "Singapore",
        "Turkey",
        "UCT",
        "US/Alaska",
        "US/Aleutian",
        "US/Arizona",
        "US/Central",
        "US/East-Indiana",
        "US/Eastern",
        "US/Hawaii",
        "US/Indiana-Starke",
        "US/Michigan",
        "US/Mountain",
        "US/Pacific",
        "US/Pacific-New",
        "US/Samoa",
        "UTC",
        "Universal",
        "W-SU",
        "WET",
        "Zulu"
      ],
      "metadata": {
        "description": "Choose the timezone for the MSL machines"
      }
    },
    "MSLPassword": {
      "type": "securestring",
      "minLength": 8,
      "maxLength": 41,
      "metadata": {
        "description": "The MSL initial password. Minimum length of 8 characters with alphanumeric characters only"
      }
    },
    "MSLRemoteNetworks": {
      "type": "string",
      "minLength": 9,
      "maxLength": 256,
      "metadata": {
        "description": "A comma-delimited list of remote networks wrapped with \"\" allowed to access the servers (eg. \"1.2.3.4/32\", \"5.6.7.8/32\")"
      }
    },
    "windowsPassword": {
      "type": "securestring",
      "minLength": 12,
      "maxLength": 72,
      "metadata": {
        "description": "Password for the Virtual Machine. Password must have 3 of the following: 1 lower case character, 1 upper case character, 1 number, and 1 special character. The value must be between 12 and 72 characters long."
      }
    },
    "deployMivb": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Set to 'true' to deploy a MiVoice Business server"
      }
    },
    "MivbVersion": {
      "type": "string",
      "defaultValue": "9.4 SP1",
      "allowedValues": [
        "9.4 SP1",
        "9.4"
      ],
      "metadata": {
        "description": "Specify the version of MiVoice Business to deploy"
      }
    },
    "MivbSize": {
      "type": "object",
      "defaultValue": {
        "name": "MIVB250",
        "vmSize": "Standard_F2s_v2",
        "diskSizeGB": 32
      },
      "allowedValues": [
        {
          "name": "MIVB250",
          "vmSize": "Standard_F2s_v2",
          "diskSizeGB": 32
        },
        {
          "name": "MiVB1500",
          "vmSize": "Standard_F4s_v2",
          "diskSizeGB": 32
        },
        {
          "name": "MiVB2500",
          "vmSize": "Standard_F4s_v2",
          "diskSizeGB": 32
        },
        {
          "name": "MiVB5000",
          "vmSize": "Standard_F8s_v2",
          "diskSizeGB": 32
        }
      ],
      "metadata": {
        "description": "Choose the size of the MiVB to deploy"
      }
    },
    "deployMicollab": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Set to 'true' to deploy a MiCollab server"
      }
    },
    "micollabVersion": {
      "type": "string",
      "defaultValue": "9.6.0.105",
      "allowedValues": [
        "9.6.0.105",
        "9.6.0.13"
      ],
      "metadata": {
        "description": "Specify the version of MiCollab to deploy"
      }
    },
    "micollabSize": {
      "type": "object",
      "defaultValue": {
        "name": "MiCollab250",
        "vmSize": "Standard_D2s_v4",
        "diskSizeGB": 64
      },
      "allowedValues": [
        {
          "name": "MiCollab250",
          "vmSize": "Standard_D2s_v4",
          "diskSizeGB": 64
        },
        {
          "name": "MiCollab1500",
          "vmSize": "Standard_D4s_v4",
          "diskSizeGB": 128
        },
        {
          "name": "MiCollab2500",
          "vmSize": "Standard_D8s_v4",
          "diskSizeGB": 128
        },
        {
          "name": "MiCollab5000",
          "vmSize": "Standard_D8s_v4",
          "diskSizeGB": 128
        }
      ],
      "metadata": {
        "description": "Choose the size of the MiCollab to deploy"
      }
    },
    "deployTeleworkerMBG": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Set to 'true' to deploy an MBG server in the DMZ to be used for Teleworker"
      }
    },
    "teleworkerMBGVersion": {
      "type": "string",
      "defaultValue": "11.4.0.247",
      "allowedValues": [
        "11.4.0.247",
        "11.4.0.227"
      ],
      "metadata": {
        "description": "Specify the version of MBG to deploy"
      }
    },
    "teleworkerMBGSize": {
      "type": "object",
      "defaultValue": {
        "name": "MBG250",
        "vmSize": "Standard_F2s_v2",
        "diskSizeGB": 32
      },
      "allowedValues": [
        {
          "name": "MBG250",
          "vmSize": "Standard_F2s_v2",
          "diskSizeGB": 32
        },
        {
          "name": "MBG2500",
          "vmSize": "Standard_F4s_v2",
          "diskSizeGB": 64
        },
        {
          "name": "MBG2500WebPlus",
          "vmSize": "Standard_D4s_v4",
          "diskSizeGB": 64
        },
        {
          "name": "MBG5000",
          "vmSize": "Standard_F8s_v2",
          "diskSizeGB": 64
        },
        {
          "name": "MBG5000WebPlus",
          "vmSize": "Standard_F8s_v2",
          "diskSizeGB": 64
        }
      ],
      "metadata": {
        "description": "Choose the size of the Teleworker MBG to deploy"
      }
    },
    "DeploySipMBG": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Set to 'true' to deploy an MBG server in the DMZ to be used for SIP Trunks/SRC"
      }
    },
    "sipMBGVersion": {
      "type": "string",
      "allowedValues": [
        "true",
        "false"
      ],
      "metadata": {
        "description": "Specify the version of MBG to deploy"
      }
    },
    "sipMBGSize": {
      "type": "object",
      "defaultValue": {
        "name": "MBG250",
        "vmSize": "Standard_F2s_v2",
        "diskSizeGB": 32
      },
      "allowedValues": [
        {
          "name": "MBG250",
          "vmSize": "Standard_F2s_v2",
          "diskSizeGB": 32
        },
        {
          "name": "MBG2500",
          "vmSize": "Standard_F4s_v2",
          "diskSizeGB": 64
        },
        {
          "name": "MBG2500WebPlus",
          "vmSize": "Standard_D4s_v4",
          "diskSizeGB": 64
        },
        {
          "name": "MBG5000",
          "vmSize": "Standard_F8s_v2",
          "diskSizeGB": 64
        },
        {
          "name": "MBG5000WebPlus",
          "vmSize": "Standard_F8s_v2",
          "diskSizeGB": 64
        }
      ],
      "metadata": {
        "description": "Choose the size of the SIP Trunk/SRC MBG to deploy"
      }
    }
  },
  "variables": {
    "prefix": "[concat(parameters('customerPrefix'), '-')]",
    "locationShorten": {
      "australiacentral": "acl",
      "australiacentral2": "acl2",
      "australiaeast": "ae",
      "australiasoutheast": "ase",
      "brazilsouth": "brs",
      "brazilsoutheast": "bse",
      "canadacentral": "cnc",
      "canadaeast": "cne",
      "centralindia": "inc",
      "centralus": "cus",
      "centraluseuap": "ccy",
      "eastasia": "ea",
      "eastus": "eus",
      "eastus2": "eus2",
      "eastus2euap": "ecy",
      "francecentral": "frc",
      "francesouth": "frs",
      "germanynorth": "gn",
      "germanywestcentral": "gwc",
      "japaneast": "jpe",
      "japanwest": "jpw",
      "koreacentral": "krc",
      "koreasouth": "krs",
      "northcentralus": "ncus",
      "northeurope": "ne",
      "norwayeast": "nwe",
      "norwaywest": "nww",
      "southafricanorth": "san",
      "southafricawest": "saw",
      "southcentralus": "scus",
      "southeastasia": "sea",
      "southindia": "ins",
      "swedencentral": "sdc",
      "switzerlandnorth": "szn",
      "switzerlandwest": "szw",
      "uaecentral": "uac",
      "uaenorth": "uan",
      "uksouth": "uks",
      "ukwest": "ukw",
      "westcentralus": "wcus",
      "westeurope": "we",
      "westindia": "inw",
      "westus": "wus",
      "westus2": "wus2",
      "westus3": "wus3"
    },
    "locationShortName": "[variables('locationShorten')[parameters('location')]]",
    "mivbUris": {
      "9.4 SP1": "",
      "9.4": ""
    },
    "mivbUri": "[variables('mivbUris')[parameters('MivbVersion')]]",
    "teleworkerMBGUris": {
      "9.4 SP1": "",
      "9.4": ""
    },
    "teleworkerMBGUri": "[variables('teleworkerMBGUris')[parameters('teleworkerMBGVersion')]]",
    "sipMBGUris": {
      "9.4 SP1": "",
      "9.4": ""
    },
    "sipMBGUri": "[variables('sipMBGUris')[parameters('sipMBGVersion')]]",
    "micollabUris": {
      "9.4 SP1": "",
      "9.4": ""
    },
    "micollabUri": "[variables('micollabUris')[parameters('micollabVersion')]]",
    "applicationResourceGroupName": "[concat(variables('prefix'), 'mit-app-', variables('locationShortName'), '-rg')]",
    "DMZResourceGroupName": "[concat(variables('prefix'), 'mit-dmz-', variables('locationShortName'), '-rg')]",
    "username": "AzureAdmin",
    "mivbName": "[concat(variables('prefix'), 'mit-', variables('locationShortName'), '-mivb01')]",
    "mivbImageName": "[concat(variables('mivbName'), '-image')]",
    "mivbLanNicName": "[concat(variables('mivbName'), '-nic-lan')]",
    "mivbOsDiskName": "[concat(variables('mivbName'), '-OSdisk')]",
    "micollabName": "[concat(variables('prefix'), 'mit-', variables('locationShortName'), '-micollab')]",
    "micollabImageName": "[concat(variables('micollabName'), '-image')]",
    "micollabLanNicName": "[concat(variables('micollabName'), '-nic-lan')]",
    "micollabOsDiskName": "[concat(variables('micollabName'), '-OSdisk')]",
    "teleworkerMBGName": "[concat(variables('prefix'), 'mit-', variables('locationShortName'), '-mbg01')]",
    "teleworkerMBGImageName": "[concat(variables('teleworkerMBGName'), '-image')]",
    "teleworkerMBGLanNicName": "[concat(variables('teleworkerMBGName'), '-nic-lan')]",
    "teleworkerMBGWanNicName": "[concat(variables('teleworkerMBGName'), '-nic-wan')]",
    "teleworkerMBGOsDiskName": "[concat(variables('teleworkerMBGName'), '-OSdisk')]",
    "teleworkerMBGPublicIPAddressName": "[concat(variables('teleworkerMBGName'), '-pip')]",
    "sipMBGName": "[concat(variables('prefix'), 'mit-', variables('locationShortName'), '-mbg02')]",
    "sipMBGImageName": "[concat(variables('sipMBGName'), '-image')]",
    "sipMBGLanNicName": "[concat(variables('sipMBGName'), '-nic-lan')]",
    "sipMBGWanNicName": "[concat(variables('sipMBGName'), '-nic-wan')]",
    "sipMBGOsDiskName": "[concat(variables('sipMBGName'), '-OSdisk')]",
    "sipMBGPublicIPAddressName": "[concat(variables('sipMBGName'), '-pip')]",
    "newVnetResourceGroup": "[concat(variables('prefix'), 'net-', variables('locationShortName'), '-rg')]",
    "vnetResourceGroup": "[if(equals(parameters('useExistingVnetResourceGroup'), 'true'), parameters('existingVirtualNetworkResourceGroup'), variables('newVnetResourceGroup'))]",
    "newVnetName": "[concat(variables('prefix'), 'net-', variables('locationShortName'), '-vnet')]",
    "vnetName": "[if(equals(parameters('useExistingVnet'), 'true'), parameters('existingVirtualNetworkName'), variables('newVnetName'))]",
    "newIntSubnetName": "[concat(variables('prefix'), 'net-', variables('locationShortName'), '-mit-app-snet')]",
    "intSubnetName": "[if(equals(parameters('useExistingVnet'), 'true'), parameters('existingIntSubnetName'), variables('newIntSubnetName'))]",
    "newDmzSubnetName": "[concat(variables('prefix'), 'net-', variables('locationShortName'), '-mit-dmz-snet')]",
    "dmzSubnetName": "[if(equals(parameters('useExistingVnet'), 'true'), parameters('existingDMZSubnetName'), variables('newDmzSubnetName'))]",
    "newIntNSGName": "[concat(variables('prefix'), 'net-', variables('locationShortName'), '-mit-app-nsg')]",
    "intNSGName": "[if(equals(parameters('useExistingNSG'), 'true'), parameters('existingIntNSGName'), variables('newIntNSGName'))]",
    "newDmzNSGName": "[concat(variables('prefix'), 'net-', variables('locationShortName'), '-mit-dmz-nsg')]",
    "dmzNSGName": "[if(equals(parameters('useExistingNSG'), 'true'), parameters('existingDmzNSGName'), variables('newDmzNSGName'))]",
    "newStorageAccountName": "[concat(variables('prefix'), 'mitelsa')]",
    "storageAccountName": "[if(equals(parameters('useExistingStorageAccount'), 'true'), parameters('existingStorageAccountName'), variables('newStorageAccountName'))]",
    "customData": "[base64(concat('{\"domain-name\": \"', parameters('privateDnsZoneName'), '\", \"system-password\": \"', parameters('MSLPassword'), '\", \"remote-networks\": [',  parameters('MSLRemoteNetworks'), ']}'))]"
  },
  "functions": [],
  "resources": [
    {
      "condition": "[equals(parameters('useExistingVnetResourceGroup'), 'false')]",
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2021-04-01",
      "location": "[parameters('location')]",
      "name": "[variables('vnetResourceGroup')]",
      "properties": {}

    },
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2021-04-01",
      "location": "[parameters('location')]",
      "name": "[variables('applicationResourceGroupName')]",
      "properties": {}

    },
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2021-04-01",
      "location": "[parameters('location')]",
      "name": "[variables('DMZResourceGroupName')]",
      "properties": {}

    },
    {
      "condition": "[equals(parameters('useExistingStorageAccount'), 'false')]",
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-04-01",
      "name": "[variables('storageAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "supportsHttpsTrafficOnly": true
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "name": "NetworkResources",
      "resourceGroup": "[variables('vnetResourceGroup')]",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "condition": "[equals(parameters('useExistingVnet'), 'false')]",
              "apiVersion": "2020-05-01",
              "type": "Microsoft.Network/networkSecurityGroups",
              "name": "[variables('intNSGName')]",
              "location": "[parameters('location')]",
              "properties": {
                "securityRules": [
                  {
                    "name": "Bistech-AVD-RDP",
                    "properties": {
                      "description": "Bistech AVD NAT Gateway Public IP RDP",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "3389",
                      "sourceAddressPrefix": "20.68.12.245/32",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": 100,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "Bistech-AVD-SSH",
                    "properties": {
                      "description": "Bistech AVD NAT Gateway Public IP SSH",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "22",
                      "sourceAddressPrefix": "20.68.12.245/32",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": 101,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "[concat(parameters('customerPrefix'), '-Overload-HTTPS')]",
                    "properties": {
                      "description": "Customer Overload Public IP HTTPS",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "443",
                      "sourceAddressPrefix": "[parameters('customerInternetIp')]",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": 102,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "[concat(parameters('customerPrefix'), '-Overload-HTTP')]",
                    "properties": {
                      "description": "Customer Overload Public IP HTTP",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "80",
                      "sourceAddressPrefix": "[parameters('customerInternetIp')]",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": 103,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "[concat(parameters('customerPrefix'), '-Overload-MiCC')]",
                    "properties": {
                      "description": "Customer Overload Public IP MiCC",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "5024-5026,5030,7001,7003,8083-8084,42440",
                      "sourceAddressPrefix": "[parameters('customerInternetIp')]",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": 104,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "[concat(parameters('customerPrefix'), '-Overload-MiVCR')]",
                    "properties": {
                      "description": "Customer Overload Public IP MiVCR",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "8767-8768",
                      "sourceAddressPrefix": "[parameters('customerInternetIp')]",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": 105,
                      "direction": "Inbound"
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/resourceGroups', variables('applicationResourceGroupName'))]"
              ]
            },
            {
              "condition": "[equals(parameters('useExistingVnet'), 'false')]",
              "apiVersion": "2020-05-01",
              "type": "Microsoft.Network/networkSecurityGroups",
              "name": "[variables('dmzNSGName')]",
              "location": "[parameters('location')]",
              "properties": {
                "securityRules": [
                  {
                    "name": "HTTP",
                    "properties": {
                      "description": "Needed for Let’s Encrypt certificate challenges",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "80",
                      "sourceAddressPrefix": "*",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": 100,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "HTTPS",
                    "properties": {
                      "description": "Web",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "443",
                      "sourceAddressPrefix": "*",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": 101,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "SAC",
                    "properties": {
                      "description": "53xx Application Interface (Legacy)",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "3998",
                      "sourceAddressPrefix": "*",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": 102,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "MIR-Replay-Media",
                    "properties": {
                      "description": "Search & replay clients (incl. Player, File Man for export, etc.) to the API server",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "4000",
                      "sourceAddressPrefix": "*",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": 103,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "MIR-Replay-Server",
                    "properties": {
                      "description": "Replay server port for replay in the web",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "4040",
                      "sourceAddressPrefix": "*",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": 104,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "AWV",
                    "properties": {
                      "description": "Use for Analog and Web Video Web Conferencing",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "4443",
                      "sourceAddressPrefix": "*",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": 105,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "MIR-Client-Command",
                    "properties": {
                      "description": "CLIENTcommand to the API server (control channel)",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "4711",
                      "sourceAddressPrefix": "*",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": 106,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "SIP-SIP-TLS",
                    "properties": {
                      "description": "This is for SIP and SIP TLS",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "5060-5061",
                      "sourceAddressPrefix": "*",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": 107,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "WebRTC",
                    "properties": {
                      "description": "This is for Web RTC",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "5063",
                      "sourceAddressPrefix": "*",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": 108,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "Minet",
                    "properties": {
                      "description": "Minet ports that need to be opened for signalling",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "6801-6802",
                      "sourceAddressPrefix": "*",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": 109,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "IP-Console",
                    "properties": {
                      "description": "The ports that need to be opened for the IP Console",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "6806-6807",
                      "sourceAddressPrefix": "*",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": 110,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "MBG-Clustering",
                    "properties": {
                      "description": "This port is being used for MBG Clustering over the internet",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "6809",
                      "sourceAddressPrefix": "*",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": 111,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "HTTPS-Phone-Avatar",
                    "properties": {
                      "description": "This port is being used for display Avatar on the phone",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "6881",
                      "sourceAddressPrefix": "*",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": 112,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "MICC-Port-Range1",
                    "properties": {
                      "description": "These ports are being used by MICC",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "35001-35008",
                      "sourceAddressPrefix": "*",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": 113,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "MICC-Port-Range2",
                    "properties": {
                      "description": "These ports are being used by MICC",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "36000-36004",
                      "sourceAddressPrefix": "*",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": 114,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "MiCollab-Client",
                    "properties": {
                      "description": "Used by MiCollab Client softphone",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "36008",
                      "sourceAddressPrefix": "*",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": 115,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "TFTP",
                    "properties": {
                      "description": "Used for TFTP",
                      "protocol": "Udp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "69",
                      "sourceAddressPrefix": "*",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": 116,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "SIP",
                    "properties": {
                      "description": "Used for UDP SIP protocol",
                      "protocol": "Udp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "5060",
                      "sourceAddressPrefix": "*",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": 117,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "TNA",
                    "properties": {
                      "description": "Used by the Telework Network Analyser tool",
                      "protocol": "Udp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "2000",
                      "sourceAddressPrefix": "*",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": 118,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "Phone-TFTP",
                    "properties": {
                      "description": "Used by phones to TFTP their software loads",
                      "protocol": "Udp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "2001",
                      "sourceAddressPrefix": "*",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": 119,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "Voice-SRTP",
                    "properties": {
                      "description": "Used for Voice SRTP",
                      "protocol": "Udp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "20002-29999",
                      "sourceAddressPrefix": "*",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": 120,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "Video-SRTP",
                    "properties": {
                      "description": "Used for Video SRTP",
                      "protocol": "Udp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "30000-30999",
                      "sourceAddressPrefix": "*",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": 121,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "WebRTC-Media",
                    "properties": {
                      "description": "Used for WebRTC Media",
                      "protocol": "Udp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "32000-32499",
                      "sourceAddressPrefix": "*",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": 122,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "GammaMedia",
                    "properties": {
                      "description": "Gamma Voice Traffic Range",
                      "protocol": "Udp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "6000-40000",
                      "sourceAddressPrefix": "151.2.128.0/19",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": 123,
                      "direction": "Inbound"
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/resourceGroups', variables('DMZResourceGroupName'))]"
              ]
            },
            {
              "condition": "[equals(parameters('useExistingVnet'), 'false')]",
              "apiVersion": "2021-05-01",
              "type": "Microsoft.Network/virtualNetworks",
              "name": "[variables('vnetName')]",
              "location": "[parameters('location')]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "[parameters('vnetAddressSpace')]"
                  ]
                },
                "subnets": [
                  {
                    "name": "[variables('newIntSubnetName')]",
                    "properties": {
                      "addressPrefix": "[parameters('intAddressSubnet')]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('intNSGName'))]"
                      }
                    }
                  },
                  {
                    "name": "[variables('newDmzSubnetName')]",
                    "properties": {
                      "addressPrefix": "[parameters('dmzAddressSubnet')]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('dmzNSGName'))]"
                      }
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/resourceGroups', variables('vnetResourceGroup'))]"
              ]
            },
            {
              "condition": "[equals(parameters('useExistingPrivateDNSZone'), 'false')]",
              "type": "Microsoft.Network/privateDnsZones",
              "apiVersion": "2020-06-01",
              "name": "[parameters('privateDnsZoneName')]",
              "location": "global"
            },
            {
              "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
              "apiVersion": "2020-06-01",
              "name": "[concat(variables('vnetName'), '-link')]",
              "location": "global",
              "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]",
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZoneName'))]"
              ],
              "properties": {
                "registrationEnabled": "true",
                "virtualNetwork": {
                  "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]"
                }
              }
            }
          ]
        },
        "parameters": {}
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "name": "DMZResources",
      "resourceGroup": "[variables('DMZResourceGroupName')]",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "condition": "[equals(parameters('deployTeleworkerMBG'), 'true')]",
              "apiVersion": "2021-05-01",
              "type": "Microsoft.Network/publicIPAddresses",
              "name": "[variables('teleworkerMBGPublicIPAddressName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Basic"
              },
              "properties": {
                "publicIPAllocationMethod": "Static",
                "publicIPAddressVersion": "IPv4",
                "idleTimeoutInMinutes": 4
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/resourceGroups', variables('DMZResourceGroupName'))]"
              ]
            },
            {
              "condition": "[equals(parameters('DeploySipMBG'), 'true')]",
              "apiVersion": "2021-05-01",
              "type": "Microsoft.Network/publicIPAddresses",
              "name": "[variables('sipMBGPublicIPAddressName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Basic"
              },
              "properties": {
                "publicIPAllocationMethod": "Static",
                "publicIPAddressVersion": "IPv4",
                "idleTimeoutInMinutes": 4
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/resourceGroups', variables('DMZResourceGroupName'))]"
              ]
            },
            {
              "condition": "[equals(parameters('deployTeleworkerMBG'), 'true')]",
              "apiVersion": "2020-11-01",
              "type": "Microsoft.Network/networkInterfaces",
              "name": "[variables('teleworkerMBGLanNicName')]",
              "location": "[parameters('location')]",
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "ipconfig1",
                    "properties": {
                      "privateIPAllocationMethod": "Dynamic",
                      "subnet": {
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'),  variables('dmzSubnetName'))]"
                      }
                    }
                  }
                ],
                "networkSecurityGroup": {
                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('dmzNSGName'))]",
                  "location": "[parameters('location')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/resourceGroups', variables('DMZResourceGroupName'))]"
              ]
            },
            {
              "condition": "[equals(parameters('deploysipMBG'), 'true')]",
              "apiVersion": "2020-11-01",
              "type": "Microsoft.Network/networkInterfaces",
              "name": "[variables('sipMBGLanNicName')]",
              "location": "[parameters('location')]",
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "ipconfig1",
                    "properties": {
                      "privateIPAllocationMethod": "Dynamic",
                      "subnet": {
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'),  variables('dmzSubnetName'))]"
                      }
                    }
                  }
                ],
                "networkSecurityGroup": {
                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('dmzNSGName'))]",
                  "location": "[parameters('location')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/resourceGroups', variables('DMZResourceGroupName'))]"
              ]
            },
            {
              "condition": "[equals(parameters('deployTeleworkerMBG'), 'true')]",
              "apiVersion": "2020-11-01",
              "type": "Microsoft.Network/networkInterfaces",
              "name": "[variables('teleworkerMBGWanNicName')]",
              "location": "[parameters('location')]",
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "ipconfig1",
                    "properties": {
                      "privateIPAllocationMethod": "Dynamic",
                      "publicIPAddress": {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('teleworkerMBGPublicIPAddressName'))]"
                      },
                      "subnet": {
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'),  variables('dmzSubnetName'))]"
                      }
                    }
                  }
                ],
                "networkSecurityGroup": {
                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('dmzNSGName'))]",
                  "location": "[parameters('location')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('teleworkerMBGPublicIPAddressName'))]"
              ]
            },
            {
              "condition": "[equals(parameters('deploysipMBG'), 'true')]",
              "apiVersion": "2020-11-01",
              "type": "Microsoft.Network/networkInterfaces",
              "name": "[variables('sipMBGWanNicName')]",
              "location": "[parameters('location')]",
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "ipconfig1",
                    "properties": {
                      "privateIPAllocationMethod": "Dynamic",
                      "publicIPAddress": {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('sipMBGPublicIPAddressName'))]"
                      },
                      "subnet": {
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'),  variables('dmzSubnetName'))]"
                      }
                    }
                  }
                ],
                "networkSecurityGroup": {
                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('dmzNSGName'))]",
                  "location": "[parameters('location')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('sipMBGPublicIPAddressName'))]"
              ]
            },
            {
              "condition": "[equals(parameters('deployTeleworkerMBG'), 'true')]",
              "apiVersion": "2020-06-01",
              "type": "Microsoft.Compute/images",
              "name": "[variables('teleworkerMBGImageName')]",
              "location": "[parameters('location')]",
              "properties": {
                "hyperVGeneration": "V1",
                "storageProfile": {
                  "osDisk": {
                    "osType": "Linux",
                    "osState": "Generalized",
                    "blobUri": "[variables('teleworkerMBGUri')]",
                    "storageAccountType": "Standard_LRS",
                    "diskSizeGB": "[parameters('teleworkerMBGSize').diskSizeGB]"
                  }
                }
              }
            },
            {
              "condition": "[equals(parameters('deploysipMBG'), 'true')]",
              "apiVersion": "2020-06-01",
              "type": "Microsoft.Compute/images",
              "name": "[variables('sipMBGImageName')]",
              "location": "[parameters('location')]",
              "properties": {
                "hyperVGeneration": "V1",
                "storageProfile": {
                  "osDisk": {
                    "osType": "Linux",
                    "osState": "Generalized",
                    "blobUri": "[variables('sipMBGUri')]",
                    "storageAccountType": "Standard_LRS",
                    "diskSizeGB": "[parameters('sipMBGSize').diskSizeGB]"
                  }
                }
              }
            },
            {
              "condition": "[equals(parameters('deployTeleworkerMBG'), 'true')]",
              "apiVersion": "2021-11-01",
              "type": "Microsoft.Compute/virtualMachines",
              "name": "[variables('teleworkerMBGName')]",
              "location": "[parameters('location')]",
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces/', variables('teleworkerMBGLanNicName'))]",
                "[resourceId('Microsoft.Compute/images', variables('teleworkerMBGImageName'))]",
                "[resourceId('Microsoft.Network/networkInterfaces',variables('teleworkerMBGWanNicName'))]"
              ],
              "properties": {
                "hardwareProfile": {
                  "vmSize": "[parameters('teleworkerMBGSize').vmSize]"
                },

                "osProfile": {
                  "computerName": "[variables('teleworkerMBGName')]",
                  "adminUsername": "[variables('username')]",
                  "adminPassword": "[parameters('MSLPassword')]",
                  "customData": "[variables('customData')]"
                },
                "storageProfile": {
                  "imageReference": {
                    "id": "[resourceId('Microsoft.Compute/images', variables('teleworkerMBGImageName'))]"
                  },
                  "osDisk": {
                    "createOption": "FromImage",
                    "name": "[variables('teleworkerMBGOsDiskName')]"
                  }
                },
                "networkProfile": {
                  "networkInterfaces": [
                    {
                      "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('teleworkerMBGLanNicName'))]",
                      "properties": {
                        "primary": true
                      }
                    }
                  ]
                },
                "diagnosticsProfile": {
                  "bootDiagnostics": {
                    "enabled": true,
                    "storageUri": "[concat('https://', variables('storageAccountName'), '.blob.core.windows.net')]"
                  }
                }
              }
            },
            {
              "condition": "[equals(parameters('deploySipMBG'), 'true')]",
              "apiVersion": "2021-11-01",
              "type": "Microsoft.Compute/virtualMachines",
              "name": "[variables('sipMBGName')]",
              "location": "[parameters('location')]",
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces/', variables('sipMBGLanNicName'))]",
                "[resourceId('Microsoft.Compute/images', variables('sipMBGImageName'))]",
                "[resourceId('Microsoft.Network/networkInterfaces',variables('sipMBGWanNicName'))]"
              ],
              "properties": {
                "hardwareProfile": {
                  "vmSize": "[parameters('sipMBGSize').vmSize]"
                },
                "osProfile": {
                  "computerName": "[variables('sipMBGName')]",
                  "adminUsername": "[variables('username')]",
                  "adminPassword": "[parameters('MSLPassword')]",
                  "customData": "[variables('customData')]"
                },
                "storageProfile": {
                  "imageReference": {
                    "id": "[resourceId('Microsoft.Compute/images', variables('sipMBGImageName'))]"
                  },
                  "osDisk": {
                    "createOption": "FromImage",
                    "name": "[variables('sipMBGOsDiskName')]"
                  }
                },
                "networkProfile": {
                  "networkInterfaces": [
                    {
                      "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('sipMBGLanNicName'))]",
                      "properties": {
                        "primary": true
                      }
                    }
                  ]
                },
                "diagnosticsProfile": {
                  "bootDiagnostics": {
                    "enabled": true,
                    "storageUri": "[concat('https://', variables('storageAccountName'), '.blob.core.windows.net')]"
                  }
                }
              }
            }
          ]
        },
        "parameters": {}
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "name": "AppResources",
      "resourceGroup": "[variables('applicationResourceGroupName')]",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "condition": "[equals(parameters('deployMivb'), 'true')]",
              "apiVersion": "2020-11-01",
              "type": "Microsoft.Network/networkInterfaces",
              "name": "[variables('mivbLanNicName')]",
              "location": "[parameters('location')]",
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "ipconfig1",
                    "properties": {
                      "privateIPAllocationMethod": "Dynamic",
                      "subnet": {
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'),  variables('intSubnetName'))]"
                      }
                    }
                  }
                ],
                "networkSecurityGroup": {
                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('intNSGName'))]",
                  "location": "[parameters('location')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/resourceGroups', variables('applicationResourceGroupName'))]"
              ]
            },
            {
              "condition": "[equals(parameters('deployMicollab'), 'true')]",
              "apiVersion": "2020-11-01",
              "type": "Microsoft.Network/networkInterfaces",
              "name": "[variables('micollabLanNicName')]",
              "location": "[parameters('location')]",
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "ipconfig1",
                    "properties": {
                      "privateIPAllocationMethod": "Dynamic",
                      "subnet": {
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'),  variables('intSubnetName'))]"
                      }
                    }
                  }
                ],
                "networkSecurityGroup": {
                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('intNSGName'))]",
                  "location": "[parameters('location')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/resourceGroups', variables('applicationResourceGroupName'))]"
              ]
            },
            {
              "condition": "[equals(parameters('deployMivb'), 'true')]",
              "apiVersion": "2020-06-01",
              "type": "Microsoft.Compute/images",
              "name": "[variables('mivbImageName')]",
              "location": "[parameters('location')]",
              "properties": {
                "hyperVGeneration": "V1",
                "storageProfile": {
                  "osDisk": {
                    "osType": "Linux",
                    "osState": "Generalized",
                    "blobUri": "[variables('mivbUri')]",
                    "storageAccountType": "Standard_LRS",
                    "diskSizeGB": "[parameters('mivbSize').diskSizeGB]"
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/resourceGroups', variables('applicationResourceGroupName'))]"
              ]
            },
            {
              "condition": "[equals(parameters('deployMicollab'), 'true')]",
              "apiVersion": "2020-06-01",
              "type": "Microsoft.Compute/images",
              "name": "[variables('micollabImageName')]",
              "location": "[parameters('location')]",
              "properties": {
                "hyperVGeneration": "V1",
                "storageProfile": {
                  "osDisk": {
                    "osType": "Linux",
                    "osState": "Generalized",
                    "blobUri": "[variables('micollabUri')]",
                    "storageAccountType": "Standard_LRS",
                    "diskSizeGB": "[parameters('micollabSize').diskSizeGB]"
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/resourceGroups', variables('applicationResourceGroupName'))]"
              ]
            },

            {
              "condition": "[equals(parameters('deployMivb'), 'true')]",
              "apiVersion": "2021-11-01",
              "type": "Microsoft.Compute/virtualMachines",
              "name": "[variables('mivbName')]",
              "location": "[parameters('location')]",
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces/', variables('mivbLanNicName'))]",
                "[resourceId('Microsoft.Compute/images', variables('mivbImageName'))]"
              ],
              "properties": {
                "hardwareProfile": {
                  "vmSize": "[parameters('MivbSize').vmSize]"
                },
                "osProfile": {
                  "computerName": "[variables('mivbName')]",
                  "adminUsername": "[variables('username')]",
                  "adminPassword": "[parameters('MSLPassword')]",
                  "customData": "[variables('customData')]"
                },
                "storageProfile": {
                  "imageReference": {
                    "id": "[resourceId('Microsoft.Compute/images', variables('mivbImageName'))]"
                  },
                  "osDisk": {
                    "createOption": "FromImage",
                    "name": "[variables('mivbOsDiskName')]"
                  }
                },
                "networkProfile": {
                  "networkInterfaces": [
                    {
                      "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('mivbLanNicName'))]",
                      "properties": {
                        "primary": true
                      }
                    }
                  ]
                },
                "diagnosticsProfile": {
                  "bootDiagnostics": {
                    "enabled": true,
                    "storageUri": "[concat('https://', variables('storageAccountName'), '.blob.core.windows.net')]"
                  }
                }
              }
            },
            {
              "condition": "[equals(parameters('deployMicollab'), 'true')]",
              "apiVersion": "2021-11-01",
              "type": "Microsoft.Compute/virtualMachines",
              "name": "[variables('micollabName')]",
              "location": "[parameters('location')]",
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces/', variables('micollabLanNicName'))]",
                "[resourceId('Microsoft.Compute/images', variables('micollabImageName'))]"
              ],
              "properties": {
                "hardwareProfile": {
                  "vmSize": "[parameters('micollabSize').vmSize]"
                },
                "osProfile": {
                  "computerName": "[variables('micollabName')]",
                  "adminUsername": "[variables('username')]",
                  "adminPassword": "[parameters('MSLPassword')]",
                  "customData": "[variables('customData')]"
                },
                "storageProfile": {
                  "imageReference": {
                    "id": "[resourceId('Microsoft.Compute/images', variables('micollabImageName'))]"
                  },
                  "osDisk": {
                    "createOption": "FromImage",
                    "name": "[variables('micollabOsDiskName')]"
                  }
                },
                "networkProfile": {
                  "networkInterfaces": [
                    {
                      "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('micollabLanNicName'))]",
                      "properties": {
                        "primary": true
                      }
                    }
                  ]
                },
                "diagnosticsProfile": {
                  "bootDiagnostics": {
                    "enabled": true,
                    "storageUri": "[concat('https://', variables('storageAccountName'), '.blob.core.windows.net')]"
                  }
                }
              }
            }
          ]
        },
        "parameters": {}
      }
    }
  ],
  "outputs": {}
}