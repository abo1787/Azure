{
   "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
   "contentVersion": "1.0.0.0",
   "parameters": {
      "logicAppname": {
         "type": "String",
         "metadata": {
            "description": "The name of the logic app to create."
         }
      },
      "logicAppLocation": {
         "type": "string",
         "metadata": {
            "description": "The location of the logic app resource group."
         }
      },
      "automationAccountResourceGroup": {
         "type": "string",
         "metadata": {
            "description": "The resource group containing the AVDAutomationAccount."
         }
      },
      "laQueryResourceGroupName": {
         "type": "string",
         "metadata": {
            "description": "Log Analytics resource group name."
         }
      },
      "laQueryWorkspaceName": {
         "type": "string",
         "metadata": {
            "description": "Log Analytics workspace name."
         }
      },
      "laQuerySubscription": {
         "type": "string",
         "metadata": {
            "description": "Log Analytics subscription."
         }
      },
      "scalingAlertUri": {
         "type": "securestring",
         "metadata": {
            "description": "Uri of the Bistech Logic App to trigger."
         }
      }
   },
   "variables": {
      "azureAutomationConnectionName": "azureAutomation_AutoScaling",
      "azureAutomationConnectionDisplayName": "AzureAutomation_Connection_AVDAutomationAccount",
      "azureLogsConnectionName": "azureLogs_AutoScaling",
      "azureLogsConnectionDisplayName": "[concat('AzureLogs_Connection_', parameters('laQueryWorkspaceName'))]",
      "automationAccountEncodeUri": "[concat('/subscriptions/@{encodeURIComponent(''', parameters('laQuerySubscription'), ''')}/resourceGroups/@{encodeURIComponent(''', parameters('automationAccountResourceGroup'), ''')}/providers/Microsoft.Automation/automationAccounts/@{encodeURIComponent(''AVDAutomationAccount'')}')]"

   },
   "resources": [
      {
         "type": "Microsoft.Web/connections",
         "apiVersion": "2016-06-01",
         "name": "[variables('azureAutomationConnectionName')]",
         "location": "[parameters('logicAppLocation')]",
         "kind": "V1",
         "properties": {
            "api": {
               "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('logicAppLocation'), '/managedApis/', 'azureautomation')]"
            },
            "displayName": "[variables('azureAutomationConnectionDisplayName')]"
         }
      },
      {
         "type": "Microsoft.Web/connections",
         "apiVersion": "2016-06-01",
         "name": "[variables('azureLogsConnectionName')]",
         "location": "[parameters('logicAppLocation')]",
         "kind": "V1",
         "properties": {
            "api": {
               "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('logicAppLocation'), '/managedApis/', 'azuremonitorlogs')]"
            },
            "displayName": "[variables('azureLogsConnectionDisplayName')]"
         }
      },
      {
         "type": "Microsoft.Logic/workflows",
         "apiVersion": "2017-07-01",
         "name": "[parameters('logicAppname')]",
         "location": "[parameters('logicAppLocation')]",
         "dependsOn": [ "[resourceId('Microsoft.Web/connections', variables('azureLogsConnectionName'))]" ],
         "identity": {
            "type": "SystemAssigned"
         },
         "properties": {
            "state": "Disabled",
            "definition": {
               "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
               "contentVersion": "1.0.0.0",
               "parameters": {
                  "$connections": {
                     "defaultValue": {},
                     "type": "Object"
                  }
               },
               "triggers": {
                  "Recurrence_-_Every_15_minutes_to_match_scaling_frequency": {
                     "recurrence": {
                        "frequency": "Minute",
                        "interval": 15
                     },
                     "evaluatedRecurrence": {
                        "frequency": "Minute",
                        "interval": 15
                     },
                     "type": "Recurrence"
                  }
               },
               "actions": {
                  "Condition": {
                     "actions": {
                        "Terminate": {
                           "runAfter": {},
                           "type": "Terminate",
                           "inputs": {
                              "runStatus": "Cancelled"
                           }
                        }
                     },
                     "runAfter": {
                        "Initialize_variable_'results'": [
                           "Succeeded"
                        ]
                     },
                     "else": {
                        "actions": {
                           "Condition_2": {
                              "actions": {
                                 "Terminate_2": {
                                    "runAfter": {},
                                    "type": "Terminate",
                                    "inputs": {
                                       "runStatus": "Cancelled"
                                    }
                                 }
                              },
                              "runAfter": {
                                 "Set_variable": [
                                    "Succeeded"
                                 ]
                              },
                              "else": {
                                 "actions": {
                                    "For_each_Job_Id_trigger_alert": {
                                       "foreach": "@variables('JobIds')",
                                       "actions": {
                                          "Get_status_of_job": {
                                             "runAfter": {},
                                             "type": "ApiConnection",
                                             "inputs": {
                                                "host": {
                                                   "connection": {
                                                      "name": "@parameters('$connections')['azureautomation']['connectionId']"
                                                   }
                                                },
                                                "method": "get",
                                                "path": "[concat(variables('automationAccountEncodeUri'), '/jobs/@{encodeURIComponent(items(''For_each_Job_Id_trigger_alert''))}')]",
                                                "queries": {
                                                   "x-ms-api-version": "2015-10-31"
                                                }
                                             }
                                          },
                                          "HTTP": {
                                             "runAfter": {
                                                "Get_status_of_job": [
                                                   "Succeeded"
                                                ]
                                             },
                                             "type": "Http",
                                             "inputs": {
                                                "body": "@body('Get_status_of_job')",
                                                "method": "POST",
                                                "uri": "[parameters('scalingAlertUri')]"
                                             }
                                          }
                                       },
                                       "runAfter": {
                                          "For_each_failed_job_get_Job_Id": [
                                             "Succeeded"
                                          ]
                                       },
                                       "type": "Foreach"
                                    },
                                    "For_each_failed_job_get_Job_Id": {
                                       "foreach": "@body('Query_Log_Analytics_again_for_failed_jobs_within_the_last_15_minutes')?['value']",
                                       "actions": {
                                          "Loop_through_returned_failed_jobs_and_append_to_JobIds": {
                                             "runAfter": {},
                                             "type": "AppendToArrayVariable",
                                             "inputs": {
                                                "name": "JobIds",
                                                "value": "@items('For_each_failed_job_get_Job_Id')?['JobId_g']"
                                             }
                                          }
                                       },
                                       "runAfter": {},
                                       "type": "Foreach"
                                    }
                                 }
                              },
                              "expression": {
                                 "and": [
                                    {
                                       "equals": [
                                          "@variables('results')",
                                          "[[]"
                                       ]
                                    }
                                 ]
                              },
                              "type": "If"
                           },
                           "Delay_for_15_mins_to_see_if_failure_reoccurs": {
                              "runAfter": {},
                              "type": "Wait",
                              "inputs": {
                                 "interval": {
                                    "count": 15,
                                    "unit": "Minute"
                                 }
                              }
                           },
                           "Query_Log_Analytics_again_for_failed_jobs_within_the_last_15_minutes": {
                              "runAfter": {
                                 "Delay_for_15_mins_to_see_if_failure_reoccurs": [
                                    "Succeeded"
                                 ]
                              },
                              "type": "ApiConnection",
                              "inputs": {
                                 "body": "AzureDiagnostics \n| where ResourceProvider == \"MICROSOFT.AUTOMATION\" and Category == \"JobLogs\" and RunbookName_s == \"automation_AVDScaling_ARM_Runbook\" and ResultType == \"Failed\"\n| where TimeGenerated > ago(15m)",
                                 "host": {
                                    "connection": {
                                       "name": "@parameters('$connections')['azuremonitorlogs']['connectionId']"
                                    }
                                 },
                                 "method": "post",
                                 "path": "/queryData",
                                 "queries": {
                                    "resourcegroups": "[parameters('laQueryResourceGroupName')]",
                                    "resourcename": "[parameters('laQueryWorkspaceName')]",
                                    "resourcetype": "Log Analytics Workspace",
                                    "subscriptions": "[parameters('laQuerySubscription')]",
                                    "timerange": "Set in query"
                                 }
                              }
                           },
                           "Set_variable": {
                              "runAfter": {
                                 "Query_Log_Analytics_again_for_failed_jobs_within_the_last_15_minutes": [
                                    "Succeeded"
                                 ]
                              },
                              "type": "SetVariable",
                              "inputs": {
                                 "name": "results",
                                 "value": "@{body('Query_Log_Analytics_again_for_failed_jobs_within_the_last_15_minutes')?['value']}"
                              }
                           }
                        }
                     },
                     "expression": {
                        "and": [
                           {
                              "equals": [
                                 "@variables('results')",
                                 "[[]"
                              ]
                           }
                        ]
                     },
                     "type": "If"
                  },
                  "Initialize_variable_'jobIds'": {
                     "runAfter": {
                        "Query_Log_Analytics_for_failed_jobs_for_automation_AVDScaling_ARM_AA.ps1_runbook": [
                           "Succeeded"
                        ]
                     },
                     "type": "InitializeVariable",
                     "inputs": {
                        "variables": [
                           {
                              "name": "JobIds",
                              "type": "array"
                           }
                        ]
                     }
                  },
                  "Initialize_variable_'results'": {
                     "runAfter": {
                        "Initialize_variable_'jobIds'": [
                           "Succeeded"
                        ]
                     },
                     "type": "InitializeVariable",
                     "inputs": {
                        "variables": [
                           {
                              "name": "results",
                              "type": "string",
                              "value": "@{body('Query_Log_Analytics_for_failed_jobs_for_automation_AVDScaling_ARM_AA.ps1_runbook')?['value']}"
                           }
                        ]
                     }
                  },
                  "Query_Log_Analytics_for_failed_jobs_for_automation_AVDScaling_ARM_AA.ps1_runbook": {
                     "runAfter": {},
                     "type": "ApiConnection",
                     "inputs": {
                        "body": "AzureDiagnostics \n| where ResourceProvider == \"MICROSOFT.AUTOMATION\" and Category == \"JobLogs\" and RunbookName_s == \"automation_AVDScaling_ARM_Runbook\" and ResultType == \"Failed\"\n| where TimeGenerated > ago(15m)",
                        "host": {
                           "connection": {
                              "name": "@parameters('$connections')['azuremonitorlogs']['connectionId']"
                           }
                        },
                        "method": "post",
                        "path": "/queryData",
                        "queries": {
                           "resourcegroups": "[parameters('laQueryResourceGroupName')]",
                           "resourcename": "[parameters('laQueryWorkspaceName')]",
                           "resourcetype": "Log Analytics Workspace",
                           "subscriptions": "[parameters('laQuerySubscription')]",
                           "timerange": "Set in query"
                        }
                     }
                  }
               },
               "outputs": {}
            },
            "parameters": {
               "$connections": {
                  "value": {
                     "azureautomation": {
                        "connectionId": "[resourceId('Microsoft.Web/connections', variables('azureAutomationConnectionName'))]",
                        "connectionName": "[variables('azureAutomationConnectionName')]",
                        "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('logicAppLocation'), '/managedApis/', 'azureautomation')]"
                     },
                     "azuremonitorlogs": {
                        "connectionId": "[resourceId('Microsoft.Web/connections', variables('azureLogsConnectionName'))]",
                        "connectionName": "azuremonitorlogs",
                        "id": "/subscriptions/d98acae0-a5a4-4497-92e8-ef62af8c2b8f/providers/Microsoft.Web/locations/uksouth/managedApis/azuremonitorlogs"
                     }
                  }
               }
            }
         }
      }
   ]
}
